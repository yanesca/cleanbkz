+ bounding function randomizálót irni
+ unit testet irni
- timing testet irni és lemérni gproffal
- optimalizálni a számitásokat (mindegyik után unit és timing test):
	- a négyzetreemeléseket kihozni amennyire csak lehet
	- előre számitani és táblázatból olvasni
		- az egységgömbök térfogatát
		- a faktoriálisokat
		- a normalizáló konstansokat
	- kikisérletezni, hogy mi az a legkisebb RR pontosság amire a 120-150 dimenziós számitás stabil
	- letekerni a pontosságot amennyire csak lehet 
	- átállitani integer programozásra az optimalizálást 

******** Itt lesz kész az extreme pruning *****
- Megnézni az early termination-ös cikkeket, hogy milyen blokkméretet lenne érdemes használni egy 128 dimenziós bázis előfeldolgozásához 
- Megirni a pruningos BKZ-t, enumerationt külön függvénybe tenni
- Minden enumeration hivást és a vonatkozó unit teszteket átirni az új enumeration-re 
- kikisérletezni a paramétereket a bkz automatikus bounding function keresőjéhez
- Implementálni a radius reductiont és az early terminationt 
- Implementálni az unexpected early terminationt (mindig kiirja lemezre, hogy hanyadik iterációnál jár és hogy mi az aktuális bázis)
- Kiszámolni a rögzitett sikerű illetve a javitott Schneider univerzális függvényeket és beépiteni az algoritmusba

******** Itt lesz kész a BKZ2.0 **********

